#!/bin/sh

set +e

DOCKER_ENCAPS_ETC_PATH=${DOCKER_ENCAPS_ETC_PATH:-'/etc/encaps.d'}
DOCKER_ENCAPS_KILL_TIMEOUT=${DOCKER_ENCAPS_KILL_TIMEOUT:-30}
DOCKER_ENCAPS_RM_TIMEOUT=${DOCKER_ENCAPS_RM_TIMEOUT:-300}

if [ -z "$DOCKER_ENCAPS_NAME" ]; then
    if [ -z "$BUILD_TAG" ]; then
        echo "No DOCKER_ENCAPS_NAME or BUILD_TAG"
        exit 1
    fi

    DOCKER_ENCAPS_NAME=$(echo "$BUILD_TAG" | sed 's/[^a-zA-Z0-9_.-]/_/g')
fi

# Run clean-up hooks
for hook in $(find "$DOCKER_ENCAPS_ETC_PATH" -name "cleanup-pre*" 2>/dev/null); do
    $hook
done

# Try to kill the container
KILL_OK=1
docker kill "$DOCKER_ENCAPS_NAME" &
KILL_PID=$!
for (( i=0; i<$DOCKER_ENCAPS_KILL_TIMEOUT; i++ )); do
    if [ "$(docker inspect --type=container --format='{{.State.Status}}' "$DOCKER_ENCAPS_NAME")" != "running" ]; then
        KILL_OK=0
        break
    fi
    sleep 2
done
kill $KILL_PID || true

# Force kill
if [ $KILL_OK -ne 0 ]; then
    docker kill --signal=TERM "$DOCKER_ENCAPS_NAME"
    sleep 5
fi

TIMEOUT_CMD=$(command -v timeout)
if [ -z "$TIMEOUT_CMD" ]; then
    echo "timeout command not available"
    unset DOCKER_ENCAPS_RM_TIMEOUT
fi
$TIMEOUT_CMD $DOCKER_ENCAPS_RM_TIMEOUT docker rm --force "$DOCKER_ENCAPS_NAME"
RM_RET=$?

for hook in $(find "$DOCKER_ENCAPS_ETC_PATH" -name "cleanup-post*" 2>/dev/null); do
    $hook
done

exit $RM_RET

